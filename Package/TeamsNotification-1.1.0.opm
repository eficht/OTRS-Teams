<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>TeamsNotification</Name>
    <Version>1.1.0</Version>
    <Vendor>meisterheister</Vendor>
    <URL>https://github.com/meisterheister/</URL>
    <License>GNU AFFERO GENERAL PUBLIC LICENSE Version 3, November 2007</License>
	<ChangeLog Version="1.1.0" Date="2019-12-18 00:00:00">Added 3 options for notification sizes, theme color by priority, customizable activity image and article sender type as well as ticket type dependent notification filters.</ChangeLog>
    <ChangeLog Version="1.0.0" Date="2019-12-11 14:00:00">Initial release.</ChangeLog>
	<Description Lang="en">Provides an event based module to send a notification to a Microsoft Teams webhook. A webhook per Teams channel is needed. The webhook URL is choosen based on the queue it was associated with. This association is done in System Config item TeamsNotification::QueueToWebhookURL. Follow the below link on how to create a webhook:https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook</Description>
    <Framework>6.0.x</Framework>
    <IntroInstall Lang="en" Title="Thank you!" Type="post">Thank you for installing the TeamsNotification module.</IntroInstall>
    <PackageIsVisible>1</PackageIsVisible>
    <PackageIsDownloadable>1</PackageIsDownloadable>
    <PackageIsRemovable>1</PackageIsRemovable>
    <BuildDate>2019-12-18 00:00:00</BuildDate>
    <BuildHost>otrs-6</BuildHost>
    <Filelist>
        <File Location="Kernel/Config/Files/XML/TeamsNotification.xml" Permission="644" Encode="Base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiID8+CjxvdHJzX2NvbmZpZyB2ZXJzaW9uPSIyLjAiIGluaXQ9IkFwcGxpY2F0aW9uIj4KICAgIDxTZXR0aW5nIE5hbWU9IlRlYW1zTm90aWZpY2F0aW9uOjpRdWV1ZVRvV2ViaG9va1VSTCIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5UZWFtcyBXZWJob29rIFVSTHM8L0Rlc2NyaXB0aW9uPgogICAgICAgIDxOYXZpZ2F0aW9uPlRlYW1zOjpBUEk8L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SGFzaD4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iUXVldWUiPlVSTDwvSXRlbT4KICAgICAgICAgICAgPC9IYXNoPgogICAgICAgIDwvVmFsdWU+CiAgICA8L1NldHRpbmc+CiAgICA8U2V0dGluZyBOYW1lPSJUZWFtc05vdGlmaWNhdGlvbjo6U2VuZGVyVHlwZSIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5WYWxpZCBhcnRpY2xlIHNlbmRlciB0eXBlcy4gMCA9IGRpc2FibGVkLCAxID0gZW5hYmxlZDwvRGVzY3JpcHRpb24+CiAgICAgICAgPE5hdmlnYXRpb24+VGVhbXM6OkFQSTwvTmF2aWdhdGlvbj4KICAgICAgICA8VmFsdWU+CiAgICAgICAgICAgIDxIYXNoPgogICAgICAgICAgICAgICAgPEl0ZW0gS2V5PSJjdXN0b21lciI+MTwvSXRlbT4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iYWdlbnQiPjA8L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9InN5c3RlbSI+MDwvSXRlbT4KICAgICAgICAgICAgPC9IYXNoPgogICAgICAgIDwvVmFsdWU+CiAgICA8L1NldHRpbmc+CiAgICA8U2V0dGluZyBOYW1lPSJUZWFtc05vdGlmaWNhdGlvbjo6VGlja2V0VHlwZSIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5WYWxpZCB0aWNrZXQgdHlwZXMuIDAgPSBkaXNhYmxlZCwgMSA9IGVuYWJsZWQ8L0Rlc2NyaXB0aW9uPgogICAgICAgIDxOYXZpZ2F0aW9uPlRlYW1zOjpBUEk8L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SGFzaD4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iU2VydmljZVJlcXVlc3QiPjE8L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IkluY2lkZW50Ij4xPC9JdGVtPgogICAgICAgICAgICAgICAgPEl0ZW0gS2V5PSJUYXNrIj4wPC9JdGVtPgogICAgICAgICAgICA8L0hhc2g+CiAgICAgICAgPC9WYWx1ZT4KICAgIDwvU2V0dGluZz4KICAgIDxTZXR0aW5nIE5hbWU9IlRlYW1zTm90aWZpY2F0aW9uOjpOb3RpZmljYXRpb25Db2xvciIgUmVxdWlyZWQ9IjAiIFZhbGlkPSIxIj4KICAgICAgICA8RGVzY3JpcHRpb24gVHJhbnNsYXRhYmxlPSIxIj5TZXQgcHJpb3JpdHkgbmFtZSBhbmQgY29sb3IuIFRoZSBjb2xvciBtdXN0IGJlIGEgaGV4IHZhbHVlLjwvRGVzY3JpcHRpb24+CiAgICAgICAgPE5hdmlnYXRpb24+VGVhbXM6OkFQSTwvTmF2aWdhdGlvbj4KICAgICAgICA8VmFsdWU+CiAgICAgICAgICAgIDxIYXNoPgogICAgICAgICAgICAgICAgPEl0ZW0gS2V5PSI1IHZlcnkgaGlnaCI+RkY1MDVFPC9JdGVtPgogICAgICAgICAgICAgICAgPEl0ZW0gS2V5PSI0IGhpZ2giPkZGQUFBQTwvSXRlbT4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iZGVmYXVsdCI+Q0RDRENEPC9JdGVtPgogICAgICAgICAgICA8L0hhc2g+CiAgICAgICAgPC9WYWx1ZT4KICAgIDwvU2V0dGluZz4KICAgIDxTZXR0aW5nIE5hbWU9IlRlYW1zTm90aWZpY2F0aW9uOjpOb3RpZmljYXRpb25WaWV3IiBSZXF1aXJlZD0iMCIgVmFsaWQ9IjEiPgogICAgICAgIDxEZXNjcmlwdGlvbiBUcmFuc2xhdGFibGU9IjEiPkVuYWJsZSBzZW5kaW5nIG5vdGlmaWNhdGlvbnMgdG8gVGVhbXMuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8TmF2aWdhdGlvbj5UZWFtczo6QVBJPC9OYXZpZ2F0aW9uPgogICAgICAgIDxWYWx1ZT4KICAgICAgICAgICAgPEl0ZW0gVmFsdWVUeXBlPSJTZWxlY3QiIFNlbGVjdGVkSUQ9Im5ldmVyIj4KICAgICAgICAgICAgICAgIDxJdGVtIFZhbHVlVHlwZT0iT3B0aW9uIiBWYWx1ZT0ibGFyZ2UiIFRyYW5zbGF0YWJsZT0iMSI+TGFyZ2U8L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBWYWx1ZVR5cGU9Ik9wdGlvbiIgVmFsdWU9Im1lZGl1bSIgVHJhbnNsYXRhYmxlPSIxIj5NZWRpdW08L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBWYWx1ZVR5cGU9Ik9wdGlvbiIgVmFsdWU9InNtYWxsIiBUcmFuc2xhdGFibGU9IjEiPlNtYWxsPC9JdGVtPgogICAgICAgICAgICAgICAgPEl0ZW0gVmFsdWVUeXBlPSJPcHRpb24iIFZhbHVlPSJuZXZlciIgVHJhbnNsYXRhYmxlPSIxIj5EaXNhYmxlZDwvSXRlbT4KICAgICAgICAgICAgPC9JdGVtPgogICAgICAgIDwvVmFsdWU+CiAgICA8L1NldHRpbmc+CiAgICA8U2V0dGluZyBOYW1lPSJUZWFtc05vdGlmaWNhdGlvbjo6Tm90aWZpY2F0aW9uSW1hZ2UiIFJlcXVpcmVkPSIwIiBWYWxpZD0iMSI+CiAgICAgICAgPERlc2NyaXB0aW9uIFRyYW5zbGF0YWJsZT0iMSI+U2V0IHBhdGggdG8gaW1hZ2UuIElmIG5vdCBzZXQgdGhlIGRlZmF1bHQgaW1hZ2Ugd2lsbCBiZSB0aGUgb25lIHNldCBhcyBBZ2VudExvZ2luTG9nby48L0Rlc2NyaXB0aW9uPgogICAgICAgIDxOYXZpZ2F0aW9uPlRlYW1zOjpBUEk8L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SXRlbSBWYWx1ZVR5cGU9IlN0cmluZyIgVmFsdWVSZWdleD0iIj48L0l0ZW0+CiAgICAgICAgPC9WYWx1ZT4KICAgIDwvU2V0dGluZz4KICAgIDxTZXR0aW5nIE5hbWU9IlRpY2tldDo6RXZlbnRNb2R1bGVQb3N0IyMjMTExLVRlYW1zTm90aWZpY2F0aW9uIiBSZXF1aXJlZD0iMCIgVmFsaWQ9IjEiPgogICAgICAgIDxEZXNjcmlwdGlvbiBUcmFuc2xhdGFibGU9IjEiPlNlbmRzIG5vdGlmaWNhdGlvbiBiYXNlZCBvbiB0aGUgZXZlbnQgdHlwZSB0byBNaWNyb3NvZnQgVGVhbXMuPC9EZXNjcmlwdGlvbj4KICAgICAgICA8TmF2aWdhdGlvbj5Db3JlOjpUaWNrZXQ8L05hdmlnYXRpb24+CiAgICAgICAgPFZhbHVlPgogICAgICAgICAgICA8SGFzaD4KICAgICAgICAgICAgICAgIDxJdGVtIEtleT0iTW9kdWxlIj5LZXJuZWw6OlN5c3RlbTo6VGlja2V0OjpFdmVudDo6VGVhbXNOb3RpZmljYXRpb248L0l0ZW0+CiAgICAgICAgICAgICAgICA8SXRlbSBLZXk9IkV2ZW50Ij4oQXJ0aWNsZUNyZWF0ZSk8L0l0ZW0+CiAgICAgICAgICAgIDwvSGFzaD4KICAgICAgICA8L1ZhbHVlPgogICAgPC9TZXR0aW5nPgo8L290cnNfY29uZmlnPg==</File>
        <File Location="Kernel/System/Ticket/Event/TeamsNotification.pm" Permission="644" Encode="Base64"></File>
    </Filelist>
</otrs_package>